######################################################################
#  Variable for this configurations
#  ATTENTION: 
#  KLIPPER merges all [gcode_macro VARIABLE] into one configuration file.
#  If the variable name already exists it will be overwritten!
#####################################################################

[gcode_macro DISPLAY_VARIABLE]
gcode:

variable_tmc_driver : { }

# tmc_driver = {'defined': True, 
#               'index': ['dual_carriage', 'extruder', 'extruder2', 'stepper_x', 'stepper_y', 'stepper_z'],
#               'type': ['tmc2209 dual_carriage', 'tmc2209 extruder', 'tmc2209 extruder2', 'tmc2209 stepper_x', 'tmc2209 stepper_y', 'tmc2209 stepper_z'], 
#               'active': 0
#               'max_curr' : 1.0
#              }
           
 
#############################################################
# Creating a list of variables from the printer configuration
# using [gcode_macro RUN_MACRO_INIT] which will run
# in [delayed_gcode _INIT] after restarting FW Klipper.
#
# This macro finds all defined _INIT_* macros and runs them.
# The start order can be defined by names: _A_INIT_* , _B_INIT_* etc.
#############################################################

[gcode_macro _INIT_TMC_DRIVER]
gcode:
  
 {% set display_vars = printer["gcode_macro DISPLAY_VARIABLE"] %} 

   {% set name = "tmc_driver" %}
   {% set init = { 'defined' : False } %}  
  
   {% for object in printer.configfile.config|sort %}
     {% if 'tmc' is in object %}     
       {% set stepper = object.split(' ')[2] if object.split(' ')[1] =='extruder_stepper' 
                        else object.split(' ')[2] if object.split(' ')[1] =='manual_stepper'
                        else object.split(' ')[1]  %} 

        {% set driver = (object.split(' ')[0]).lstrip("tmc") %}  

    {% if loop.index0 %}
        {% set tmc_map = {2130:1.40 , 2208:1.40 , 2209:2.00 , 5160:2.50 } %}
        {% set max_curr = tmc_map.get(driver|int, 1.50) %}  
    {% endif %}      
      
        {% set _dummy = init.update({ 'index': [stepper] })  if init.index is not defined  else  init.index.append(stepper) %}
        {% set _dummy = init.update({ 'type': [object] })  if init.type is not defined  else  init.type.append(object) %}
        {% set _dummy = init.update({ 'active' : 0 } ) %} 
        {% set _dummy = init.update({ 'max_curr' : max_curr } ) %} 
        {% set _dummy = init.update({ 'defined' : True } ) %}   

      {% endif %}
    {% endfor %}  
  
     SET_GCODE_VARIABLE MACRO=DISPLAY_VARIABLE VARIABLE={name} VALUE="{init}"
     # {action_respond_info("%s = %s" % (name,init))}  

     {% set user_vars = printer["gcode_macro VARIABLE"] %} 
     {action_respond_info("Creating a list of display variables for TMC driver") if printer.save_variables.variables.dump_list}


################################################################

[gcode_macro _INIT_RECOVERY_TMC_CURRENT]
gcode:
  
  # {% set display_vars = printer["gcode_macro DISPLAY_VARIABLE"] %} 
  {% set recovery = printer.save_variables.variables %}
  
  
 {% if recovery.tmc_driver is not defined %}
    ### generate variable if needed
    {% set default = { } %}
    SAVE_VARIABLE VARIABLE=tmc_driver VALUE="{default}"
  
 {% else %} 
   ### restore TMC driver run current  
   {% for object in printer.configfile.config|sort %}
     {% if 'tmc' is in object %}     
     {% set stepper = object.split(' ')[2] if object.split(' ')[1] =='extruder_stepper' 
                else object.split(' ')[2] if object.split(' ')[1] =='manual_stepper'
                else object.split(' ')[1]  %} 
     
        {% if stepper in recovery.tmc_driver  %}     
          {% set current = recovery.tmc_driver[stepper] %}    
          SET_TMC_CURRENT STEPPER={stepper} CURRENT={current}   
          RESPOND MSG="From SD card restored "{stepper} 
        {% endif %}
      {% endif %}
    {% endfor %} 
   {% endif %}
    
   

################################################################ 

[gcode_macro GET_TMC_CURRENT]
gcode:

  {% set display_vars = printer["gcode_macro DISPLAY_VARIABLE"] %} 
  {% set upd_init = { }  %}      


 {% if display_vars.tmc_driver is defined %}  
   {% set count = display_vars.tmc_driver.index|length %}

     {% for index in range(0, count|int ) %} 
       {% set stepper = display_vars.tmc_driver.index[index] %} 
       {% set current = printer[display_vars.tmc_driver.type[index]].run_current  %}      
       {% set _dummy = upd_init.update({ stepper : current|round(3)} ) %} 

       {action_respond_info("For %s : run_current = %s A" % (stepper,current|round(3)) )}

     {% endfor %}   
  {% endif %}

################################################################ 

[gcode_macro SAVE_TMC_VARIABLE]
description:  SAVE_TMC_VARIABLE 
gcode:
    
   {% set display_vars = printer["gcode_macro DISPLAY_VARIABLE"] %} 
   {% set upd_init = { }  %}      


   {% if display_vars.tmc_driver is defined %}  
     {% set count = display_vars.tmc_driver.index|length %}

     {% for index in range(0, count|int ) %} 
       {% set stepper = display_vars.tmc_driver.index[index] %} 
       {% set current = printer[display_vars.tmc_driver.type[index]].run_current  %}      
       {% set _dummy = upd_init.update({ stepper : current|round(3)} ) %} 
     {% endfor %}   
   {% endif %}

      SAVE_VARIABLE VARIABLE=tmc_driver VALUE="{upd_init}"  



